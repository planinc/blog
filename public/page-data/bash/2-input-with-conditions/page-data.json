{"componentChunkName":"component---src-templates-blog-post-js","path":"/bash/2-input-with-conditions/","result":{"data":{"site":{"siteMetadata":{"title":"Rahul's Blog"}},"markdownRemark":{"id":"1ae79040-e68f-5f06-a827-ba2538c52b95","excerpt":"","html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token comment\"># take user input using read</span>\n<span class=\"token comment\"># -p is used to prompt with string</span>\n<span class=\"token builtin class-name\">read</span> -p <span class=\"token string\">\"What is your name: \"</span> name <span class=\"token comment\"># space after string is neccessary</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Hello <span class=\"token variable\">$name</span>\"</span>\n\n<span class=\"token builtin class-name\">read</span> -p <span class=\"token string\">\"How old are you: \"</span> age\n\n<span class=\"token comment\"># place your conditions within []</span>\n<span class=\"token comment\"># include a space after [ and before ]</span>\n<span class=\"token comment\"># Integer comparisons: eq, ne, lt, gt, le, ge</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$age</span> -ge <span class=\"token number\">16</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"You can drive\"</span>\n\n<span class=\"token comment\"># check another condition</span>\n<span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$age</span> -eq <span class=\"token number\">15</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span> \n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"You can drive next year\"</span>\n\n<span class=\"token comment\"># executed by default</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"You can't drive\"</span>\n\n<span class=\"token comment\"># closes the if statement</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\"># read multiple values</span>\n<span class=\"token builtin class-name\">read</span> -p <span class=\"token string\">\"Enter 2 numbers to sum: \"</span> num1 num2\n<span class=\"token assign-left variable\">sum</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$((</span>num1<span class=\"token operator\">+</span>num2<span class=\"token variable\">))</span></span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$num1</span> + <span class=\"token variable\">$num2</span> = <span class=\"token variable\">$sum</span>\"</span>\n\n<span class=\"token comment\"># hide the input with s code (password)</span>\n\n<span class=\"token builtin class-name\">read</span> -sp <span class=\"token string\">\"Enter the secret code: \"</span> secret\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$secret</span>\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"password\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Enter\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Wrong password\"</span>\n<span class=\"token keyword\">fi</span>\n\n\n<span class=\"token comment\">#!/bin/bash</span>\n\n<span class=\"token assign-left variable\">can_vote</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>\n<span class=\"token assign-left variable\">age</span><span class=\"token operator\">=</span><span class=\"token number\">17</span>\n\n<span class=\"token variable\"><span class=\"token punctuation\">((</span>age<span class=\"token operator\">>=</span><span class=\"token number\">18</span><span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>can_vote<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span>can_vote<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">))</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Can Vote: <span class=\"token variable\">$can_vote</span>\"</span></code></pre></div>","frontmatter":{"title":"Bash Shell Scripting: Input and Conditionals(if else)","date":"July 21, 2020","description":"learn how to take user input with prompts and use of conditional statements(if else) in bash shell scripting"}}},"pageContext":{"slug":"/bash/2-input-with-conditions/","previous":{"fields":{"slug":"/bash/3-functions/"},"frontmatter":{"title":"Bash Shell Scripting: Functions"}},"next":{"fields":{"slug":"/bash/12-value-seperator/"},"frontmatter":{"title":"Bash Shell Scripting: Value seperator in strings"}}}}}