{"componentChunkName":"component---src-templates-blog-post-js","path":"/bash/4-integer-test/","result":{"data":{"site":{"siteMetadata":{"title":"Rahul's Blog"}},"markdownRemark":{"id":"6740a4c1-beb1-5269-bc31-610d1c6707d0","excerpt":"","html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token builtin class-name\">read</span> -p <span class=\"token string\">\"Enter a number: \"</span> num\n\n<span class=\"token keyword\">if</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span>num <span class=\"token operator\">==</span> <span class=\"token number\">10</span><span class=\"token punctuation\">))</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Your number equals 10\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span>num <span class=\"token operator\">></span> <span class=\"token number\">10</span><span class=\"token punctuation\">))</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"It is greater than 10\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span>num <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">))</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"It is less than 10\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span> <span class=\"token punctuation\">((</span>num <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">))</span></span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"It is even\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\"># using logical operators &amp;&amp;, || and !</span>\n<span class=\"token keyword\">if</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span> <span class=\"token punctuation\">((</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">))</span></span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span>num <span class=\"token operator\">&lt;</span> <span class=\"token number\">11</span><span class=\"token punctuation\">))</span></span> <span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span> \n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$num</span> is between 1 and 10\"</span>\n\n<span class=\"token comment\"># &amp;&amp;, || can also used as control structures</span>\n\n<span class=\"token comment\"># create a file and then if that worked open it in gedit</span>\n<span class=\"token function\">touch</span> samp_file <span class=\"token operator\">&amp;&amp;</span> gedit samp_file\n\n<span class=\"token comment\"># if samp_dir doesn't exist, make it</span>\n<span class=\"token punctuation\">[</span> -d samp_dir <span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token function\">mkdir</span> samp_dir\n\n<span class=\"token comment\"># delete file</span>\n<span class=\"token function\">rm</span> samp_file\n\n<span class=\"token comment\"># delete directory</span>\n<span class=\"token function\">rmdir</span> samp_dir</code></pre></div>","frontmatter":{"title":"Bash Shell Scripting: Logical Operators and integer conditional statements","date":"July 21, 2020","description":"learn how to use logical operators, ==, >, <, and % with integers in bash shell scripting"}}},"pageContext":{"slug":"/bash/4-integer-test/","previous":{"fields":{"slug":"/bash/5-case/"},"frontmatter":{"title":"Bash Shell Scripting: case"}},"next":{"fields":{"slug":"/bash/3-functions/"},"frontmatter":{"title":"Bash Shell Scripting: Functions"}}}}}