{"componentChunkName":"component---src-templates-blog-post-js","path":"/bash/7-testing-strings/","result":{"data":{"site":{"siteMetadata":{"title":"Rahul's Blog"}},"markdownRemark":{"id":"9d165413-7c40-51d3-9f3c-b80977efd521","excerpt":"","html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token assign-left variable\">str1</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span>\n<span class=\"token assign-left variable\">str2</span><span class=\"token operator\">=</span><span class=\"token string\">\"Sad\"</span>\n<span class=\"token assign-left variable\">str3</span><span class=\"token operator\">=</span><span class=\"token string\">\"Happy\"</span>\n\n<span class=\"token comment\"># test if string is null</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$str1</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$str1</span> is not null\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -z <span class=\"token string\">\"<span class=\"token variable\">$str1</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$str1</span> has no value\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\"># check for equality</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$str2</span>\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"<span class=\"token variable\">$str3</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$str2</span> equals <span class=\"token variable\">$str3</span>\"</span>\n<span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$str2</span>\"</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"<span class=\"token variable\">$str3</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$str2</span> is not equal to <span class=\"token variable\">$str3</span>\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$str2</span> <span class=\"token operator\">></span> <span class=\"token variable\">$str3</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$str2</span> is greater than <span class=\"token variable\">$str3</span>\"</span>\n<span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">$str2</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$str3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$str2</span> is lesser than <span class=\"token variable\">$str3</span>\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\"># check the file test_file1 and test_file2</span>\n<span class=\"token assign-left variable\">file1</span><span class=\"token operator\">=</span><span class=\"token string\">\"./test_file1\"</span>\n<span class=\"token assign-left variable\">file2</span><span class=\"token operator\">=</span><span class=\"token string\">\"./test_file2\"</span>\n\n<span class=\"token comment\"># e: file exists</span>\n<span class=\"token comment\"># f: normal file</span>\n<span class=\"token comment\"># r: readable file</span>\n<span class=\"token comment\"># w: writable file</span>\n<span class=\"token comment\"># x: executable file</span>\n<span class=\"token comment\"># d: file is directory?</span>\n<span class=\"token comment\"># L: file is a symbolic link</span>\n<span class=\"token comment\"># p: file is a named pipe</span>\n<span class=\"token comment\"># S: file is network socket</span>\n<span class=\"token comment\"># G: file is owned by the group</span>\n<span class=\"token comment\"># O: file is owned by the userid</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -e <span class=\"token variable\">$file1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$file1</span> exists\"</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -f <span class=\"token variable\">$file1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$file1</span> is a normal file\"</span>\n    <span class=\"token keyword\">fi</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -r <span class=\"token variable\">$file1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$file1</span> is a readable file\"</span>\n    <span class=\"token keyword\">fi</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -w <span class=\"token variable\">$file1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$file1</span> is a writable file\"</span>\n    <span class=\"token keyword\">fi</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -x <span class=\"token variable\">$file1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$file1</span> is a executable file\"</span>\n    <span class=\"token keyword\">fi</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -d <span class=\"token variable\">$file1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$file1</span> is a directory\"</span>\n    <span class=\"token keyword\">fi</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -L <span class=\"token variable\">$file1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$file1</span> is a symbolic link\"</span>\n    <span class=\"token keyword\">fi</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -p <span class=\"token variable\">$file1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$file1</span> is a named pipe\"</span>\n    <span class=\"token keyword\">fi</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -S <span class=\"token variable\">$file1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$file1</span> is a network Socket\"</span>\n    <span class=\"token keyword\">fi</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -G <span class=\"token variable\">$file1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$file1</span> is a owned by the group\"</span>\n    <span class=\"token keyword\">fi</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -O <span class=\"token variable\">$file1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$file1</span> is a owned by the userid\"</span>\n    <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">fi</span></code></pre></div>","frontmatter":{"title":"Bash Shell Scripting: Strings with Conditionals(if else)","date":"July 21, 2020","description":"learn how to use if else with strings in bash shell scripting"}}},"pageContext":{"slug":"/bash/7-testing-strings/","previous":{"fields":{"slug":"/bash/9-arrays/"},"frontmatter":{"title":"Bash Shell Scripting: Arrays"}},"next":{"fields":{"slug":"/bash/2-input-with-conditions/"},"frontmatter":{"title":"Bash Shell Scripting: Input and Conditionals(if else)"}}}}}