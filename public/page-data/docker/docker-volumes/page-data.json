{"componentChunkName":"component---src-templates-blog-post-js","path":"/docker/docker-volumes/","result":{"data":{"site":{"siteMetadata":{"title":"Rahul's Blog"}},"markdownRemark":{"id":"7e1e969c-77b9-51b2-bf0b-999140afdaf9","excerpt":"Docker Volumes Volumes are the preferred mechanism for persisting data generated by and used by Docker Containers. Data is stored inside the container on a…","html":"<h1>Docker Volumes</h1>\n<p>Volumes are the preferred mechanism for persisting data generated by and used by Docker Containers.</p>\n<p>Data is stored inside the container on a writable container layer by default. It gets deleted on deleting the container. But in enterprise applications we do not want to delete the data.</p>\n<p>A container’s writable layer doesn’t persist when that container is no longer running.</p>\n<p>A container’s writable layer is tightly coupled to the host machine where the container is running. You can’t easily move the data somewhere else.</p>\n<h2>Use of Volumes</h2>\n<ul>\n<li>decoupling container from storage</li>\n<li>share volume(storage/data) among different containers</li>\n<li>attach volume to container</li>\n<li>on deleting container volume does not delete</li>\n</ul>\n<h4>To get info about docker volume</h4>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># get information\n$ docker volume</code></pre></div>\n<h4>Create docker volume</h4>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># create volume\n$ docker volume create &lt;volume-name&gt;\n\n# Example\n$ docker volume create vol1</code></pre></div>\n<h4>List docker volumes</h4>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># list the volumes\n$ docker volume ls</code></pre></div>\n<h4>Inspect docker volume</h4>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># inspect docker volume\n$ docker volume inspect &lt;volume-name&gt;</code></pre></div>\n<h4>Remove docker volume</h4>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># remove the volume\n$ docker volume rm &lt;volume-name&gt;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># remove all unused volumes\n$ docker volume prune\n\n# and press Y in prompt</code></pre></div>\n<h4>Using volume in docker containers</h4>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># assigning volume to the container\n$ docker container run -d --name &lt;container-name&gt; -v &lt;volume-name&gt;:&lt;path-to-store-data&gt; &lt;image&gt;\n\n# Example \n$ docker container run -d --name MyNginx1 -v vol1:/var/nginx_home -p 8080:8080 nginx</code></pre></div>\n<h4>bind mount</h4>\n<p>It is used to bind host machine directory with container directory</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># mount physical directory to the container\n$ docker container run -d --name &lt;container-name&gt; -v &lt;directory-path&gt;:&lt;path-to-store-data&gt; &lt;image&gt;\n\n# Example \n$ docker container run -d --name MyNginx1 -v /home/rahul:/var/nginx_home -p 8080:8080 nginx</code></pre></div>\n<p>The file or directory does not need to exist on the docker host already. It is created on demand if it does not exist.\nWe can use physical location instead of volume too to store the data</p>\n<h2>More about docker volumes</h2>\n<p>Docker has 2 options for containers to store files in the host machine, so that the file are persisted even after the container stops</p>\n<ol>\n<li>Volumes</li>\n<li>Bind Mounts</li>\n</ol>\n<p>Volumes are stored in a part of the filesystem which is managed by Docker.\nNon-docker processes should not modify this part of the filesystem.</p>\n<p>Bind mounts may be stored anywhere on the host system.\nNon-docker processes on the Docker host or a Docker Container can modify them any time.</p>\n<p>In bind mounts, the file or directory is referenced by its full path on the host machine.</p>\n<p>Volumes are the best way to persist data in docker.\nVolumes are managed by docker and are isolated from the core functionality of the host machine.</p>\n<p>A given volume can be mounted into multiple containers simultaneously.</p>\n<p>When no running container is using a volume, the volume is still available to Docker and is not removed automatically. You can remove unused volumes using <code class=\"language-text\">docker volume prune</code>.</p>\n<p>When you mount a volume, it may be named or anonymous.</p>\n<p>Anonymous volumes are not given an explicit name when they are first mounted into a container.</p>\n<p>Volumes also support the use of volume drivers, which allow you to store your data on remote hosts or cloud providers, among other possibilities.</p>","frontmatter":{"title":"Docker Volume","date":"August 01, 2020","description":"Learn what is docker volume and what you can achieve with it. Create, inspect, list, and remove docker volumes. Use docker volume to share data/storage among docker containers"}}},"pageContext":{"slug":"/docker/docker-volumes/","previous":{"fields":{"slug":"/bash-useful-commands/"},"frontmatter":{"title":"Bash Useful Commands"}},"next":{"fields":{"slug":"/docker/docker-compose/"},"frontmatter":{"title":"Docker Compose"}}}}}